/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React from 'react';
import {ScrollView, Image, StyleSheet, SafeAreaView,Animated, Text, TouchableOpacity, View} from 'react-native';
import Plus, {Portal, Component} from 'react-native-aplus';
const animateValue = new Animated.Value(0);
export default class App extends Component {
  state = {
    status: 'starting',
    message: '--',
    customActivityIndicator: null
  };

  componentDidMount() {
    Plus.sampleMethod('Testing', 123, (message) => {
      this.setState({
        status: 'native callback received',
        message
      });
    });
  }

  startAnimate =() => {
    Animated.timing(animateValue, {
      toValue: 360,
      duration: 500,
      useNativeDriver: true
    }).start(() => {
      animateValue.setValue(0)
      this.startAnimate()
    });
  };

  render() {
    const navigation = this.props.navigation ;
    return (
      <SafeAreaView style={styles.container}>
        <Portal customActivityIndicator={this.state.customActivityIndicator}/>
        <ScrollView style={styles.scroll}>
          <View style={styles.section}>
            <Text style={styles.titleStyle}>Toast</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => Plus.showToast('hello toast')}>
            <Text style={styles.textStyle}>点击显示toast在顶部</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.row} onPress={() => Plus.showToast({
            title: "hello",
            duration: Plus.Toast.DURATION.LONG,
            position: Plus.Toast.POSITION.CENTER
          })}>
            <Text style={styles.textStyle}>点击显示toast在中部</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.row} onPress={() => Plus.showToast({
            title: "hello",
            duration: Plus.Toast.DURATION.LONG,
            position: Plus.Toast.POSITION.BOTTOM
          })}>
            <Text style={styles.textStyle}>点击显示toast在底部</Text>
          </TouchableOpacity>

          <View style={styles.section}>
            <Text style={styles.titleStyle}>loading</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.showLoading('数据加载中...');
            setTimeout(() => {
              Plus.hideLoading()
            }, 2000)
          }}>
            <Text style={styles.textStyle}>点击显示loading</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.showLoading({
              title: '数据加载中...',
              theme: Plus.Loading.THEME.THEME2
            });
            setTimeout(() => {
              Plus.hideLoading()
            }, 2000)
          }}>
            <Text style={styles.textStyle}>点击显示loading主题2</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.Loading.setIndicatorProps({ // 设置loading的颜色
              color: '#f50', size: 'large'
            })
            Plus.showLoading({
              title: '数据加载中...',
              theme: Plus.Loading.THEME.THEME3
            });
            setTimeout(() => {
              Plus.hideLoading()
            }, 2000)
          }}>
            <Text style={styles.textStyle}>点击显示loading主题3</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.row} onPress={() => {
            this.setState({

              customActivityIndicator: () => <Animated.Image  source={require("./images/loading.png")} style={[styles.icon,{ transform:[{ rotate: animateValue.interpolate({
                    inputRange: [0, 360],
                    outputRange: ['0deg', '360deg']
                  }) }] }]}/>
            }, () => {
              this.startAnimate();
              Plus.showLoading({
                title: '数据加载中...',
                theme: Plus.Loading.THEME.THEME3
              });
              setTimeout(() => {
                this.setState({
                  customActivityIndicator: null
                }, () => Plus.hideLoading())
              }, 5000)
            });
          }}>
            <Text style={styles.textStyle}>自定义loading图标</Text>
          </TouchableOpacity>
          <View style={styles.section}>
            <Text style={styles.titleStyle}>Action Sheet</Text>
          </View>

          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.showActionSheet({
              title: '请选择',
              message: '请选择一种水果',
              itemList: ['香蕉', '梨子', '关闭'],
              cancelButtonIndex:2,
              success(tapIndex) {
                console.log(tapIndex)
              }
            });
          }}>
            <Text style={styles.textStyle}>点击显示actionsheet</Text>
          </TouchableOpacity>
          <View style={styles.section}>
            <Text style={styles.titleStyle}>弹框</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.showModal({
              title: "消息",
              message: 'hello world',
              onConfirm() {
                Plus.hideModal()
              }
            });
          }}>
            <Text style={styles.textStyle}>点击显示confirm框</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.showModal({
              title: "消息",
              showConfirm: false,
              message: 'hello world',
              onConfirm() {
                Plus.hideModal()
              }
            });
          }}>
            <Text style={styles.textStyle}>点击显示alert框</Text>
          </TouchableOpacity>
          <View style={styles.section}>
            <Text style={styles.titleStyle}>无限滚动</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => {
            navigation.push("FlatList")
          }}>
            <Text style={styles.textStyle}>FlatList</Text>
          </TouchableOpacity>
          <View style={styles.section}>
            <Text style={styles.titleStyle}>ShareCard</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => {
              Plus.showShareCard({
                success(tapIndex) {
                  console.log(tapIndex)
                }
              })
          }}>
            <Text style={styles.textStyle}>显示sharecard</Text>
          </TouchableOpacity>

          <View style={styles.section}>
            <Text style={styles.titleStyle}>ImageViewer放大</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.previewImage({
              images:['https://ruoyi.vip/images/ic_item_01.png','https://ruoyi.vip/images/ic_item_02.png'],
              index:0
            })

          }}>
            <Text style={styles.textStyle}>显示图片预览</Text>
          </TouchableOpacity>

          <View style={styles.section}>
            <Text style={styles.titleStyle}>Prompt</Text>
          </View>
          <TouchableOpacity style={styles.row} onPress={() => {
            Plus.showPrompt({
              title:"prompt",
              text:"hello world",
              onConfirm:(text) => {
                setTimeout(() =>{
                  alert(text)
                },1000)
              }
            })

          }}>
            <Text style={styles.textStyle}>Prompt输入框</Text>
          </TouchableOpacity>



        </ScrollView>
        {/*<Text style={styles.welcome}>☆Plus example☆</Text>*/}
        {/*<Text style={styles.instructions}>STATUS: {this.state.status}</Text>*/}
        {/*<Text style={styles.welcome}>☆NATIVE CALLBACK MESSAGE☆</Text>*/}
        {/*<Text style={styles.instructions}>{this.state.message}</Text>*/}
      </SafeAreaView>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#ffffff',
  },
  flex: {
    flex: 1
  },
  row: {
    flexDirection: "row",
    borderBottomColor: "#ccc",
    borderBottomWidth: StyleSheet.hairlineWidth,
    paddingHorizontal: 32,
    paddingVertical: 16,
  },
  section:{
    flexDirection: "row",
    borderBottomColor: "#ccc",
    borderBottomWidth: StyleSheet.hairlineWidth,
    paddingHorizontal: 16,
    paddingVertical: 16,
  },
  textStyle: {
    fontSize: 14,
    color: "#333"
  },
  titleStyle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: "#333"
  },
  icon:{
    height:30,
    width:30,
    resizeMode:"contain"
  }
});
